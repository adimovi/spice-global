{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./scroll.css';import{jsx as _jsx}from\"react/jsx-runtime\";const ScrollToTopButton=()=>{const[isVisible,setIsVisible]=useState(false);// Function to scroll to the top of the page\nconst scrollToTop=()=>{window.scrollTo({top:0,behavior:'smooth'});};// Function to check if the user has scrolled down enough to show the button\nconst handleScroll=()=>{if(window.pageYOffset>300){setIsVisible(true);}else{setIsVisible(false);}};// useEffect hook to add event listener when the component mounts\nuseEffect(()=>{window.addEventListener('scroll',handleScroll);return()=>{window.removeEventListener('scroll',handleScroll);};},[]);return/*#__PURE__*/_jsx(\"div\",{children:isVisible&&/*#__PURE__*/_jsx(\"img\",{src:\"imgs/top.png\",alt:\"\",className:\"scroll-to-top-btn\",onClick:scrollToTop})});};export default ScrollToTopButton;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","ScrollToTopButton","isVisible","setIsVisible","scrollToTop","window","scrollTo","top","behavior","handleScroll","pageYOffset","addEventListener","removeEventListener","children","src","alt","className","onClick"],"sources":["C:/Users/Movi/OneDrive/Desktop/sgm/src/components/ScrollToTopButton.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './scroll.css';\n\n\n\nconst ScrollToTopButton = () => {\n    const [isVisible, setIsVisible] = useState(false);\n\n    // Function to scroll to the top of the page\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    };\n\n    // Function to check if the user has scrolled down enough to show the button\n    const handleScroll = () => {\n        if (window.pageYOffset > 300) {\n            setIsVisible(true);\n        } else {\n            setIsVisible(false);\n        }\n    };\n\n    // useEffect hook to add event listener when the component mounts\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    return (\n        <div>\n            {isVisible && (\n            \n                   <img src=\"imgs/top.png\" alt='' className=\"scroll-to-top-btn\" onClick={scrollToTop} />\n                \n            )}\n        </div>\n    );\n};\n\nexport default ScrollToTopButton;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAItB,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACA,KAAM,CAAAO,WAAW,CAAGA,CAAA,GAAM,CACtBC,MAAM,CAACC,QAAQ,CAAC,CACZC,GAAG,CAAE,CAAC,CACNC,QAAQ,CAAE,QACd,CAAC,CAAC,CACN,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvB,GAAIJ,MAAM,CAACK,WAAW,CAAG,GAAG,CAAE,CAC1BP,YAAY,CAAC,IAAI,CAAC,CACtB,CAAC,IAAM,CACHA,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED;AACAL,SAAS,CAAC,IAAM,CACZO,MAAM,CAACM,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CAC/C,MAAO,IAAM,CACTJ,MAAM,CAACO,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,CACtD,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIT,IAAA,QAAAa,QAAA,CACKX,SAAS,eAEHF,IAAA,QAAKc,GAAG,CAAC,cAAc,CAACC,GAAG,CAAC,EAAE,CAACC,SAAS,CAAC,mBAAmB,CAACC,OAAO,CAAEb,WAAY,CAAE,CAE1F,CACA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}